{"version":3,"sources":["sounds/chatnotif.mp3","logo.svg","customFormat.js","sharedStorage.js","App.js","firebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","element","t","id","c","this","Array","isArray","textToBoardData","s","data","undefined","currentBlock","lines","split","i","length","l","e","match","slice","push","map","trim","sec","screenTest","parsedText","BoardStorage","title","content","parsedContent","lastFocusId","envStorage","currentBoard","lastId","lastBoardId","boards","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","getUser","auth","currentUser","getAdmin","email","Section","props","focus","bind","refSpan","React","createRef","current","tabIndex","data-focusid","ref","children","Component","Board","childrenRefs","refHead","items","refs","walk","lastSection","k","focusId","createElement","key","boardData","setRefFocus","autoFocus","setLastFocus","onClick","createContent","defaultProps","EditBoard","handleContentChange","handleTitleChange","state","setState","target","value","htmlFor","type","onChange","defaultValue","onDone","onCancel","ComposeMsg","msg","handleMsgChange","MainBoard","handleClickPrior","handleClickNext","handleClickBoard","onDoneBoard","onDoneMsg","refBoard","editing","editCurrent","writingMsg","firstTime","listenEvents","once","then","val","Object","values","forEach","v","endAt","limitToLast","on","console","log","changeBoard","dataset","focusid","set","newCur","external","cur","setTimeout","user","name","displayName","aria-live","aria-label","AttendeesMsg","msgs","cleanBoards","cleanMsgs","Audio","chatNotif","play","keys","App","showLogin","onAuthStateChanged","provider","GoogleAuthProvider","signInWithPopup","signOut","className","handleSignIn","handleLogOut","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ea04a2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatnotif.82bb2a7e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","\n// Structure to paint a screen.\nexport class element {\n\t// all elements should have a id, except children for Sec. Since id is for focus purposes and the smallest area is a Section element.\n\tconstructor(t, id, c) {\n\t\tthis.t = t; // string with a valid html or react element.\n\t\tif (!c && !Array.isArray(c)) [id,c] = [c,id];\n\t\tthis.id= id; // int or undefined\n\t\tif (typeof c == \"string\" || c instanceof element) c = [c];\n\t\tthis.c= c; // array of elements, or element or string.\n\t}\n}\n\nexport function textToBoardData(s) {\n\tvar id = 0, data = {t:undefined, c:[]}, currentBlock = data;\n\tif (!s) return;\n\tvar lines = s.split(\"\\n\");\n\tfor (let i=0; i<lines.length; ++i) {\n\t\tlet l = lines[i]\n\t\tif (!l) continue;\n\t\tlet e = l.match(/^(#+|\\*o*|t\\() /);\n\t\tif (!e){\n\t\t\tcurrentBlock = data;\n\t\t\tcurrentBlock.c.push(new element(\"p\", ++id, new element(\"Sec\", ++id, l)));\n\t\t\tcontinue;\n\t\t}\n\t\te= e[1];\n\t\tl = l.slice(e.length+1, l.length);\n\t\tif (!l) continue;\n\t\tif (e == \"t(\") {\n\t\t\tlet t = \"td\";\n\t\t\tif (currentBlock.t != \"table\") {\n\t\t\t\tcurrentBlock = new element(\"table\", ++id, []);\n\t\t\t\tt= \"th\";\n\t\t\t\tdata.c.push(currentBlock);\n\t\t\t}\n\t\t\tcurrentBlock.c.push(new element(\"tr\", ++id, l.split(\",\").map(\n\t\t\t\te=> new element(t, ++id, new element(\"Sec\", ++id, e.trim())))));\n\t\t}\n\t\tlet sec = new element(\"Sec\", ++id, l);\n\t\tif (e[0] == \"#\" && e.length < 7) {\n\t\t\tcurrentBlock = data;\n\t\t\tcurrentBlock.c.push(new element(\"h\"+e.length, ++id, sec));\n\t\t}\n\t\telse if (e[0] == \"*\") {\n\t\t\tlet t = e == \"*o\"? \"ol\": \"ul\";\n\t\t\tif (currentBlock.t != t) {\n\t\t\t\tcurrentBlock = new element(t, ++id, []);\n\t\t\t\tdata.c.push(currentBlock)\n\t\t\t}\n\t\t\tcurrentBlock.c.push(new element(\"li\", ++id, sec));\n\t\t}\n\t}\n\treturn data.c;\n}\n\n// programatically created test.\nexport const screenTest = [new element(\"Sec\", 1, new element(\"p\", \"this is a test\")),\nnew element(\"Sec\", 13, new element(\"p\", \"The second line\")),\n\tnew element(\"table\", 2, [\n\t\tnew element(\"tr\", 3, [\n\t\t\tnew element(\"th\", 4, new element(\"Sec\", 5, \"cell 1\")),\n\t\t\tnew element(\"th\", 6, new element(\"Sec\", 7, \"cell 2\"))]),\n\t\tnew element(\"tr\", 8, [\n\t\t\tnew element(\"td\", 9, new element(\"Sec\", 10, \"cell 3\")),\n\t\t\tnew element(\"td\", 11, new element(\"Sec\", 12, \"cell 4\"))])])];\n\n// parsing test.\nexport const  parsedText = textToBoardData(`# title 1\nsome description of a paragraph.\n## subtitle 2.\n* item x\n* item y\n\n## another subtitle 2.\n*o item 1\n*o item 2\n\n# more title 1.\na basic table.\nt( header cell 1, header cell 2\nt( content cell 1, content cell 2\n`);\n\n","import {textToBoardData, screenTest, parsedText} from './customFormat';\n\nexport class BoardStorage {\n\tconstructor(title, content, parsedContent) {\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.parsedContent = parsedContent;\n\t\tif (content) this.parsedContent = textToBoardData(content);\n\t\tthis.lastFocusId = undefined;\n\t}\n}\n\nexport const envStorage = {\n\tcurrentBoard: 0,\n\tlastId: 1,\n\tlastFocusId: undefined,\n\tlastBoardId: undefined,\n\tboards: [\n\t\tnew BoardStorage(\"hola 1\", undefined, screenTest),\n\t\tnew BoardStorage(\"hola 2\", undefined, parsedText)]\n}\n\n","import React from 'react';\nimport firebase from 'firebase';\nimport logo from './logo.svg';\nimport chatNotif from './sounds/chatnotif.mp3';\nimport './App.css';\nimport {element, textToBoardData, screenTest, parsedText} from './customFormat';\nimport {BoardStorage, envStorage} from './sharedStorage';\nimport {firebaseConfig} from './firebaseConfig';\nfirebase.initializeApp (firebaseConfig);\nvar db = firebase.database();\n\n\nfunction getUser() {\n\tif (firebase.auth().currentUser != null) return firebase.auth().currentUser;\n\treturn null;\n}\n\nfunction getAdmin() {\n\tif (firebase.auth().currentUser != null && firebase.auth().currentUser.email === \"dhf360@gmail.com\") return firebase.auth().currentUser;\n\treturn null;\n}\n\nclass Section extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.focus = this.focus.bind(this);\n\t\tthis.refSpan= React.createRef();\n\t}\n\n\tfocus() {\n\t\tthis.refSpan.current.focus();\n\t}\n\t\n\trender() {\n\t\treturn (<span tabIndex=\"-1\" data-focusid={this.props['data-focusid']} ref={this.refSpan}>{this.props.children}</span>);\n\t}\n}\n\nclass Board extends React.Component {\n\tstatic defaultProps = {autoFocus:true}\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.childrenRefs = {};\n\t\tthis.refHead= React.createRef();\n\t}\n\n\tcreateContent() {\n\t\tconst items = this.props.content;\n\t\tif (!items) return undefined;\n\t\tvar refs = {};\n\t\tfunction walk (items, lastSection) {\n\t\t\tlet children = []\n\t\t\tfor (let k in items) {\n\t\t\t\tk = items[k];\n\t\t\t\tif (typeof k === \"string\") {\n\t\t\t\t\tchildren.push(k)\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!k.t) continue;\n\t\t\t\tlet ref = undefined;\n\t\t\t\tlet focusId = lastSection;\n\t\t\t\tlet e = k.t;\n\t\t\t\tlet c = k.c;\n\t\t\t\tif (e === \"table\") c = [new element(\"tbody\", c)];\n\t\t\t\telse if (e === 'Sec'){\n\t\t\t\t\tref = React.createRef();\n\t\t\t\t\trefs[k.id] = ref;\n\t\t\t\t\te = Section;\n\t\t\t\t\tfocusId = k.id;\n\t\t\t\t}\n\t\t\t\tchildren.push(React.createElement(e, {key: k.id, ref:ref, 'data-focusid':focusId, children: walk(c, focusId)}));\n\t\t\t}\n\t\t\treturn children;\n\t\t}\n\t\tvar c = walk(items);\n\t\tthis.childrenRefs = refs;\n\t\treturn c;\n\t}\n\n\tsetRefFocus(key) {\n\t\tthis.childrenRefs[key] && this.childrenRefs[key].current.focus();\n\t\tenvStorage.boards[envStorage.currentBoard].lastFocusId = key;\n\t}\n\t\n\tsetLastFocus() {\t\n\t\tif (this.props.boardData && this.props.boardData.lastFocusId) this.setRefFocus(this.props.boardData.lastFocusId);\n\t\telse this.refHead.current.focus();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.autoFocus) this.setLastFocus();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.autoFocus) this.setLastFocus();\n\t}\n\n\trender() {\n\t\treturn (<div onClick={this.props.onClick}>\n\t\t<h1 tabIndex=\"-1\" ref={this.refHead}>{this.props.title}</h1>\n\t\t{this.createContent()}\n\t\t</div>);\n\t}\n}\n\nclass EditBoard extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleContentChange = this.handleContentChange.bind(this);\n\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\n\t\tthis.state = {title: '', content: ''};\n\t}\n\n\thandleTitleChange(e) {\n\t\tthis.setState({title: e.target.value});\n\t}\n\n\thandleContentChange(e) {\n\t\tthis.setState({content: e.target.value});\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<h1>preview</h1>\n\t\t\t<Board title={this.state.title} content={textToBoardData(this.state.content)} autoFocus={false}/>\n\t\t\t<h1>Input</h1>\n\t\t\t<label htmlFor=\"input-title\">\n\t\t\t\tEnter title\n\t\t\t</label>\n\t\t\t<input autoFocus type=\"text\" id=\"input-title\" onChange={this.handleTitleChange} defaultValue={this.state.title}/>\n\t\t\t<label htmlFor=\"input-content\">\n\t\t\t\tEnter some content\n\t\t\t</label>\n\t\t\t<textarea id=\"input-content\" onChange={this.handleContentChange} defaultValue={this.state.content}/>\n\t\t\t<button onClick={()=> this.props.onDone({title: this.state.title, content:this.state.content})}>Done!</button>\n\t\t\t<button onClick={this.props.onCancel}>Cancel</button>\n\t\t</div>);\n\t}\n}\n\nclass ComposeMsg extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {msg: ''};\n\t\tthis.handleMsgChange = this.handleMsgChange.bind(this);\n\t}\n\n\thandleMsgChange(e) {\n\t\tthis.setState({msg: e.target.value});\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<h1>write a message for the speaker</h1>\n\t\t\t<label htmlFor=\"input-message\">\n\t\t\t\tEnter message\n\t\t\t</label>\n\t\t\t<input autoFocus type=\"text\" id=\"input-msg\" onChange={this.handleMsgChange} defaultValue={this.state.msg}/>\n\t\t\t<button onClick={()=> this.props.onDone(this.state.msg)}>Done!</button>\n\t\t\t<button onClick={this.props.onCancel}>Cancel</button>\n\t\t</div>);\n\t}\n}\n\nclass MainBoard extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleClickPrior = this.handleClickPrior.bind(this);\n\t\tthis.handleClickNext = this.handleClickNext.bind(this);\n\t\tthis.handleClickBoard = this.handleClickBoard.bind(this);\n\t\tthis.onDoneBoard = this.onDoneBoard.bind(this);\n\t\tthis.onDoneMsg = this.onDoneMsg.bind(this);\n\t\tthis.refBoard= React.createRef();\n\t\tthis.state = {currentBoard: 0, editing:false, editCurrent:false, writingMsg:false};\n\t\tthis.firstTime=false;\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.listenEvents();\n\t}\n\n\tlistenEvents() {\n\t\tthis.firstTime=true;\n\n\t\tdb.ref('boards').once('value').then(e => {\n\t\t\tlet val = e.val();\n\t\t\tif (val) Object.values(val).forEach(v => {\n\t\t\t\tenvStorage.boards.push(new BoardStorage(v.title, v.content));\n\t\t\t});\n\t\t});\n\t\t\n\t\tdb.ref('boards').endAt().limitToLast(1).on('child_added', e => {\n\t\t\tif (this.firstTime) {\n\t\t\t\tthis.firstTime = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet val = e.val();\n\t\t\tconsole.log(\"ultimo boardData\", val);\n\t\t\tif (val){\n\t\t\t\tenvStorage.boards.push(new BoardStorage(val.title, val.content));\n\t\t\t}\n\t\t});\n\t\t\n\t\tdb.ref('lastFocusId').on('value', e => {\n\t\t\tlet val = e.val();\n\t\t\tconsole.log(\"ultimo focus\", val);\n\t\t\tif (val){\n\t\t\t\tthis.refBoard.current.setRefFocus(val);\n\t\t\t\tenvStorage.lastFocusId = val;\n\t\t\t}\n\t\t});\n\n\t\tdb.ref('lastBoardId').on('value', e => {\n\t\t\tlet val = e.val();\n\t\t\tconsole.log(\"ultimo lastBoardId\", val, \"tipo de datos\", typeof val);\n\t\t\tif (typeof val == \"number\"){\n\t\t\t\tthis.changeBoard(val, true);\n\t\t\t\tenvStorage.lastBoardId = val;\n\t\t\t}\n\t\t});\n\t}\n\n\thandleClickBoard(e) {\n\t\tvar id = e.target.dataset.focusid;\n\t\tif (!id) return;\n\t\tenvStorage.boards[envStorage.currentBoard].lastFocusId = id;\n\t\tif (getAdmin()) db.ref(\"lastFocusId\").set(id);\n\t}\n\n\tchangeBoard(newCur, external) {\n\t\tif (newCur >= 0 && newCur < envStorage.boards.length) {\n\t\t\tenvStorage.currentBoard = newCur;\n\t\t\tthis.setState({currentBoard: newCur});\n\t\t\tif (!external && getAdmin()) db.ref(\"lastBoardId\").set(newCur);\n\t\t}\n\t}\n\n\thandleClickPrior() {\n\t\tvar cur = this.state.currentBoard;\n\t\t--cur;\n\t\tthis.changeBoard(cur);\n\t}\n\n\thandleClickNext() {\n\t\tvar cur = this.state.currentBoard;\n\t\t++cur;\n\t\tthis.changeBoard(cur);\n\t}\n\n\tonDoneBoard(e) {\n\t\t// if (this.state.editCurrent) this.updateBoard(e);\n\t\tvar l = envStorage.boards.length;\n\t\tthis.setState({editing:false});\n\t\tif (getAdmin()) {\n\t\t\tdb.ref(\"boards\").push(e);\n\t\t\tsetTimeout(() => db.ref(\"lastBoardId\").set(l), 1000);\n\t\t}\n\t}\n\n\tonDoneMsg(e) {\n\t\tthis.setState({writingMsg:false});\n\t\tvar user = getUser();\n\t\tif (user) db.ref(\"msgs\").push({name:user.displayName, msg:e});\n\t}\n\n\n\n\trender() {\n\t\tif (this.state.editing) return <EditBoard onDone={this.onDoneBoard}\n\t\tonCancel={()=> this.setState({editing:false, editCurrent:false})}/>;\n\t\tif (this.state.writingMsg) return <ComposeMsg onDone={this.onDoneMsg}\n\t\tonCancel={()=> this.setState({writingMsg:false})}/>;\n\t\treturn (<div aria-live=\"assertive\">\n\t\t\t<Board\n\t\t\ttitle={envStorage.boards[envStorage.currentBoard].title}\n\t\t\tcontent={envStorage.boards[envStorage.currentBoard].parsedContent}\n\t\t\tonClick={this.handleClickBoard}\n\t\t\tboardData={envStorage.boards[envStorage.currentBoard]}\n\t\t\tref={this.refBoard}/>\n\t\t\t<section aria-label=\"board controls\">\n\t\t\t\t<button onClick={this.handleClickPrior}>previous board</button>\n\t\t\t\t<button onClick={this.handleClickNext}>Next board</button>\n\t\t\t\t{getAdmin() && <button onClick={e=> this.setState({editing:true})}>New board</button>}\n\t\t\t\t{getUser() && <button onClick={e=> this.setState({writingMsg:true})}>ask  the speaker</button>}\n\t\t\t</section>\n\t\t</div>);\n\t}\n}\n\nclass AttendeesMsg extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {msgs: {}};\n\t\tthis.cleanBoards = this.cleanBoards.bind(this);\n\t\tthis.cleanMsgs= this.cleanMsgs.bind(this);\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.listenEvents();\n\t}\n\n\tlistenEvents() {\n\t\tthis.firstTime=true;\n\n\t\tdb.ref('msgs').once('value').then(e => {\n\t\t\tlet val = e.val();\n\t\t\tif (val) this.setState({msgs: val});\n\t\t});\n\t\t\n\t\tdb.ref('msgs').endAt().limitToLast(1).on('child_added', e => {\n\t\t\tif (this.firstTime) {\n\t\t\t\tthis.firstTime = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet val = e.val();\n\t\t\tif (val){\n\t\t\t\tthis.setState({msgs: {...this.state.msgs, val} });\n\t\t\t\tnew Audio(chatNotif).play();\n\t\t\t}\n\t\t});\t\t\n\t}\n\n\tcleanBoards() {\n\t\tdb.ref(\"boards\").set(null);\n\t}\n\t\n\tcleanMsgs() {\n\t\tdb.ref(\"msgs\").set(null);\n\t\tthis.setState({msgs:{}});\n\t}\n\t\n\trender() {\n\t\tvar msgs = this.state.msgs;\n\t\treturn (<>\n\t\t<button onClick={this.cleanBoards}>clean boards</button>\n\t\t<button onClick={this.cleanMsgs}>clean messages</button>\n\t\t<h1>Users messages</h1>\n\t\t<ul aria-live=\"assertive\">\n\t\t\t{Object.keys(msgs).map(k =>\n\t\t\t\t(<li key={k}>{msgs[k].name}: {msgs[k].msg}</li>)\n\t\t\t)}\n\t\t</ul></>);\n\t}\n}\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {user: null, showLogin: true}\n\t}\n\n\tcomponentDidMount() {\n\t\tfirebase.auth().onAuthStateChanged(user => {\n\t\t\tthis.setState({ user });\n\t\t});\n\t}\n\n\thandleSignIn() {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tfirebase.auth().signInWithPopup(provider);\n\t}\n\n\thandleLogOut() {\n\t\tfirebase.auth().signOut();\n\t}\n\n\trender () {\n\t\treturn (<div className=\"App\">\n\t\t\t{ !this.state.user && this.state.showLogin? (<><button onClick={this.handleSignIn.bind(this)}>Sign in</button>\n\t\t\t<button onClick={() => this.setState({showLogin: false})}>dismis</button></>\n\t\t\t) : this.state.showLogin && (<button onClick={this.handleLogOut.bind(this)}>Logout</button>)}\n\t\t\t<MainBoard/>\n\t\t\t{getAdmin() && <AttendeesMsg/>}\n\t\t</div>);\n\t}\n}\n\n","export const firebaseConfig = {\n\tapiKey: \"AIzaSyB6JklybdPvmLcJigv8Z9dswNmF3LTQcFM\",\n\tauthDomain: \"accessible-remote-board.firebaseapp.com\",\n\tdatabaseURL: \"https://accessible-remote-board.firebaseio.com\",\n\tprojectId: \"accessible-remote-board\",\n\tstorageBucket: \"accessible-remote-board.appspot.com\",\n\tmessagingSenderId: \"493998861743\",\n\tappId: \"1:493998861743:web:4155c8afbc234b0e80135a\",\n\tmeasurementId: \"G-BB9MKZNJS9\"\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}